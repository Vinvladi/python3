# Урок 32 Словари (dict) (dictionary)
# Словарь - неупорядоченная коллекция произвольных объектов с доступом к ключу, словарь также называют ассоциативным массивом, ассоциативным списком
# a = ['moskva','piter','penza'] - элементы в списке пронумерованы a[0] = moskva и так далее (вложенный список)
# 
# 'moskva' - 495,
# 'piter' - 812,
# 'penza' - 8412
# 
# 1) Первый способ задать словарь без функции dict
# d ={
#   key:value,
# }
# d0 = {
#       'moskva' = 495,
#       'piter' = 812,
#       'penza' = 8412
#
# d1 = {
# "name": 'Семен',
# "mid_name": 'Семенович',
#"balance": 32.56
# }
# Данный тип словарь начинается присваиванием элемента d = с участием {}
# 
# 2.1) Второй способ задать словарь
# r = dict (moskva=495,piter=812,penza=8412) #заметим, что значение ключей мы пишем без кавычек и когда в качестве ключей используются только строковые типы 
# r_wrong = dict (1=495,2=812,3=8412)
# print (r)
#
# 2.2) Третий способ задать словарь
# Для этого нам понадобится вложенный список a = [['moskva',495],['piter',812],['penza',8412]] 
# t = dict(a)
#
# 2.3) Четвертый способ задать словарь
# 2.3.1) q = dict.fromkeys(['a','b','c']) - впринципе можно больше ничего не передавать
# print(q) в терминале: {'a': None, 'b': None, 'c': None}
# метод .fromkeys превращает каждый элемент в ключ и присваивает значение к None
# 2.3.2) Для того, чтобы положить какие-то значения к ключу необхимо воспользоваться такой записью
# q1 = dict.fromkeys(['a','b','c'],100)
# print(q) в терминале: {'a': 100, 'b': 100, 'c': 100} - данный метод используется тогда, когда необходимо проинициализировать ключи к каким-то значениям
# 
# 3) Создание пустого словаря 2 способа:
# 3.1) v = {}
# print(v,type(v)) в терминале: {} <class 'dict'>
# 3.2) v = dict()
#
#
# КЛЮЧИ И ЗНАЧЕНИЯ 
# ключем не может быть изменяемый тип, значения могут быть любым типом (либо цифры, либо строки)
#
# Обращение к значениям словаря. К значениям словаря можно обращатся и обращение не по индексу, а по ключу
# print (d['moskva']) , если мы будем использовать ключ d[0], то так как у нас нет такого ключа, нам выведет ошибку в console: KeyError:0
# g = {
#      1: 'one',
#      2: 'two',
#      3: 'three'
# }
# Далее будем использовать g словарь
# Как добавить значение к словарю (в словарь)
# Делается это при помощи присвоения к ключу
# g[4] = 'four'
# g[5] = 'five'
# Теперь у нас есть значение  g[4] в словаре
# То есть, для того чтобы добавить элемент в словарь нам надо к несуществующему ключу присвоить значение 
# если мы будем использовать g[3] = 'Три', то мы поменяем значение 3-го ключа
# print(g) в Shell: {1: 'one', 2: 'two', 3: 'Три', 4: 'four', 5: 'five'}
# Словарь относится к изменяемым объектам

