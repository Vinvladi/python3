# Списки и их методы 
# Повторение строк пример с методом upper (строки не изменяемый объект)
# s = "hello"
# s.upper() в Shell: "HELLO"
# s = "hello", чтобы изменить строчку необходимо s = s.upper()
# 1) Метод .append (добавляет в список одно значение)
# a = [12,43,54,65,76,3]
# a.append(46) после нажатия enter в Shell ничего не произошло
# но если мы в Shell запросим a, то получим: [12, 43, 54, 65, 76, 3, 46] - 46 добавилось в конце списка
# если мы приравляем a = a.append(46) - нам удалит весь список a, после обращение в Shell: ничего не будет (print(a) = None)
# Что касается данного метода, мы пердает только 1 новый элемент (может быть строка, список, но это не могут быть 2 значения)
# 2) Метод очистить (a.clear()), он не принимает никаких аргументов, соответсвенно он делает список пустым
# a.clear() в Shell a: []
# 
# a=[12,43,54,65,76,3]
# 3) Метод copy (a.copy()) создает копию списка
# a[:]
# таким образом можно создать 2 отдельных списка b=a.copy() (ссылаться b и a будут на различные объекты и поэтому мы можем с ними спокойно проводить операции)
# 4) Метод количество вхождений count(<значение>)
# b.count(12) в Shell: 1
# b.count(0)  в Shell: 0
# 5) Метод поиска идекса значения.  index
# b.index(54) в Shell: 2 (0,1,2) 
# данный метод будет проходить по определенным индексам b.index(12,3,5) - 3,4 индекс проходит 
# 12 in b[3:5] в Shell: False
# 6) Метод вставить insert (<индекс элемента куда вставлять>,<элемент вставки>)
# b.insert(0,100) - при этом он сдвигает все элементы на 1 и встает на место, указанное в индексе метода
# в shell после данного метода: [100,12,43,54,65,76,3]
# Примечание: Аналогично и некоторым другим методам, можно вставлять только одно значение аргумента!
# 7) Мемод pop (удаляет с конца списка значение и показывает нам его)
# b.pop() в Shell: 3 , после этого в списке b его не будет. b в Shell: [100, 12, 43, 54, 65, 76]
# last = b.pop()
# last = 76 , а в b останется: [100, 12, 43, 54, 65, 76]
# 7.a) pop + index | b.pop(3)
# данный пример выполнения метода будет удалять 3-ий элемент (0,1,2,3(этот элемент),4)
# 8) Метод remove
# b.remove(100) - данный метод удаляет по значению, а не по индексу, как pop
# b.remove 100 в Shell: [12, 43, 54, 65, 76]
# если мы попытаемя удалить еще раз значение которого нет, то мы получим ошибку в Shell: Traceback (ValueError(нет такого значения))
# Пример: b.append(43) - добавим 43 в наш список 
# b в Shell : [12, 43, 54, 65, 76, 43] далее мы используем метод remove(43) и он удалит нам первый попавшийся элемент со значением 43 
# b в Shell : [12, 54, 65, 76, 43]
# 9) Метод reverse()
# Метод переворачивает список в Shell b.reverse() : [43,76,65,54,12]
#
# 10) Один из самых необходимых методов, это метод sort (Сортировка элементов по возрастанию)
# b.sort () - по умолчанию он будет сортировать по возрастанию, а с добавлением b.reverse по убыванию 
# 10.r) Если необходимо сразу отсортировать элементы по убыванию b.sort(reverse=True) в таком случае отсортируется по убыванию.

# в python Shell, для того чтобы вызвать контекстную подсказку необходимо нажать ctr + пробел